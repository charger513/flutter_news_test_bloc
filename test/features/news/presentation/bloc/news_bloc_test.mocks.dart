// Mocks generated by Mockito 5.0.14 from annotations
// in flutter_news_test_bloc/test/features/news/presentation/bloc/news_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:flutter_news_test_bloc/core/errors/failure.dart' as _i6;
import 'package:flutter_news_test_bloc/features/news/domain/entities/news_response.dart'
    as _i7;
import 'package:flutter_news_test_bloc/features/news/domain/repositories/news_repository_contract.dart'
    as _i2;
import 'package:flutter_news_test_bloc/features/news/domain/usecases/get_news.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeNewsRepositoryContract_0 extends _i1.Fake
    implements _i2.NewsRepositoryContract {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetNews].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNews extends _i1.Mock implements _i4.GetNews {
  MockGetNews() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.NewsRepositoryContract get newsRepository =>
      (super.noSuchMethod(Invocation.getter(#newsRepository),
              returnValue: _FakeNewsRepositoryContract_0())
          as _i2.NewsRepositoryContract);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.NewsResponse>> call() =>
      (super.noSuchMethod(Invocation.method(#call, []),
          returnValue: Future<_i3.Either<_i6.Failure, _i7.NewsResponse>>.value(
              _FakeEither_1<_i6.Failure, _i7.NewsResponse>())) as _i5
          .Future<_i3.Either<_i6.Failure, _i7.NewsResponse>>);
  @override
  String toString() => super.toString();
}
